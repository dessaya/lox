package main

// autogenerated with `python generate_ast.py .`

type Stmt interface {
	accept(v StmtVisitor) interface{}
}

type Expression struct {
	expression Expr
}

func NewExpression(expression Expr) *Expression {
	return &Expression{
		expression: expression,
	}
}

func (e *Expression) accept(sv StmtVisitor) interface{} {
	return sv.visitExpressionStmt(e)
}

type Print struct {
	expression Expr
}

func NewPrint(expression Expr) *Print {
	return &Print{
		expression: expression,
	}
}

func (p *Print) accept(sv StmtVisitor) interface{} {
	return sv.visitPrintStmt(p)
}

type StmtVisitor interface {
	visitExpressionStmt(e *Expression) interface{}
	visitPrintStmt(p *Print) interface{}
}
